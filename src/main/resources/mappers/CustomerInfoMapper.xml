<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.CustomerInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.CustomerInfo" >
    <constructor >
      <idArg column="customer_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="customer_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="person_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="customer_qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="customer_prov" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="customer_city" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="customer_state" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="customer_pay_count" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="customer_balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="customer_attention" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="order_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="engineer_defriend" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="admin_check" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    customer_id, customer_name, password, phone, email,person_code, customer_qq, customer_prov, customer_city,
    customer_state, customer_pay_count, customer_balance, customer_attention, order_count,engineer_defriend, admin_check,create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_info
    where customer_id = #{customerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_info
    where customer_id = #{customerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.CustomerInfo" >
    insert into customer_info (customer_id, customer_name, password, 
      phone, email, person_code,customer_qq,
      customer_prov, customer_city, customer_state, 
      customer_pay_count, customer_balance, customer_attention,order_count,engineer_defriend, admin_check,create_time,
      update_time)
    values (#{customerId,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{personCode,jdbcType=VARCHAR},#{customerQq,jdbcType=VARCHAR},
      #{customerProv,jdbcType=VARCHAR}, #{customerCity,jdbcType=VARCHAR}, #{customerState,jdbcType=TINYINT}, 
      #{customerPayCount,jdbcType=VARCHAR}, #{customerBalance,jdbcType=DECIMAL},#{customerAttention,jdbcType=LONGVARCHAR} , #{orderCount,jdbcType=INTEGER},#{engineerDefriend,jdbcType=VARCHAR}, #{adminCheck,jdbcType=INTEGER},now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.CustomerInfo" >
    insert into customer_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="personCode != null" >
        person_code,
      </if>
      <if test="customerQq != null" >
        customer_qq,
      </if>
      <if test="customerProv != null" >
        customer_prov,
      </if>
      <if test="customerCity != null" >
        customer_city,
      </if>
      <if test="customerState != null" >
        customer_state,
      </if>
      <if test="customerPayCount != null" >
        customer_pay_count,
      </if>
      <if test="customerBalance != null" >
        customer_balance,
      </if>
      <if test="customerAttention != null" >
        customer_attention,
      </if>
      <if test="orderCount != null" >
        order_count,
      </if>
      <if test="engineerDefriend != null" >
        engineer_defriend,
      </if>
      <if test="adminCheck != null" >
        admin_check,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="personCode != null" >
        #{personCode,jdbcType=VARCHAR},
      </if>
      <if test="customerQq != null" >
        #{customerQq,jdbcType=VARCHAR},
      </if>
      <if test="customerProv != null" >
        #{customerProv,jdbcType=VARCHAR},
      </if>
      <if test="customerCity != null" >
        #{customerCity,jdbcType=VARCHAR},
      </if>
      <if test="customerState != null" >
        #{customerState,jdbcType=TINYINT},
      </if>
      <if test="customerPayCount != null" >
        #{customerPayCount,jdbcType=VARCHAR},
      </if>
      <if test="customerBalance != null" >
        #{customerBalance,jdbcType=DECIMAL},
      </if>
      <if test="customerAttention != null" >
        #{customerAttention,jdbcType=LONGVARCHAR},
      </if>
      <if test="orderCount != null" >
        #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="engineerDefriend != null" >
        #{engineerDefriend,jdbcType=VARCHAR},
      </if>
      <if test="adminCheck != null" >
        #{adminCheck,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.CustomerInfo" >
    update customer_info
    <set >
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="personCode != null" >
        person_code = #{personCode,jdbcType=VARCHAR},
      </if>
      <if test="customerQq != null" >
        customer_qq = #{customerQq,jdbcType=VARCHAR},
      </if>
      <if test="customerProv != null" >
        customer_prov = #{customerProv,jdbcType=VARCHAR},
      </if>
      <if test="customerCity != null" >
        customer_city = #{customerCity,jdbcType=VARCHAR},
      </if>
      <if test="customerState != null" >
        customer_state = #{customerState,jdbcType=TINYINT},
      </if>
      <if test="customerPayCount != null" >
        customer_pay_count = #{customerPayCount,jdbcType=VARCHAR},
      </if>
      <if test="customerBalance != null" >
        customer_balance = #{customerBalance,jdbcType=DECIMAL},
      </if>
      <if test="customerAttention != null" >
        customer_attention = #{customerAttention,jdbcType=LONGVARCHAR},
      </if>

      <if test="orderCount != null" >
        order_count = #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="engineerDefriend != null" >
        engineer_defriend = #{engineerDefriend,jdbcType=VARCHAR},
      </if>
      <if test="adminCheck != null" >
        admin_check = #{adminCheck,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>

        update_time = now(),


    </set>
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pojo.CustomerInfo" >
    update customer_info
    set customer_name = #{customerName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      person_code = #{personCode,jdbcType=VARCHAR},
      customer_qq = #{customerQq,jdbcType=VARCHAR},
      customer_prov = #{customerProv,jdbcType=VARCHAR},
      customer_city = #{customerCity,jdbcType=VARCHAR},
      customer_state = #{customerState,jdbcType=TINYINT},
      customer_pay_count = #{customerPayCount,jdbcType=VARCHAR},
      customer_balance = #{customerBalance,jdbcType=DECIMAL},
      order_count = #{orderCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      customer_attention = #{customerAttention,jdbcType=LONGVARCHAR}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.CustomerInfo" >
    update customer_info
    set customer_name = #{customerName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      person_code = #{personCode,jdbcType=VARCHAR},
      customer_qq = #{customerQq,jdbcType=VARCHAR},
      customer_prov = #{customerProv,jdbcType=VARCHAR},
      customer_city = #{customerCity,jdbcType=VARCHAR},
      customer_state = #{customerState,jdbcType=TINYINT},
      customer_pay_count = #{customerPayCount,jdbcType=VARCHAR},
      customer_balance = #{customerBalance,jdbcType=DECIMAL},
      customer_attention = #{customerAttention,jdbcType=LONGVARCHAR}
      order_count = #{orderCount,jdbcType=INTEGER},
      engineer_defriend = #{engineerDefriend,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where customer_id = #{customerId,jdbcType=INTEGER}
  </update>

  <select id="selectByUserName" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer_info
    <where>
      <if test="customerId != null"> customer_id != #{customerId}</if>
      <if test="customerName != null">and customer_name = #{customerName}</if>
      <if test="email != null">and email = #{email}</if>
      <if test="phone != null">and phone = #{phone}</if>
      <if test="personCode != null">and person_code = #{personCode}</if>
    </where>
  </select>

  <select id="login" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from customer_info
    where customer_name = #{customerName,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="loginByPhone" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from customer_info
    where phone = #{phone,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="list" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer_info
    <where>
      <if test="state != null"> customer_state = #{state}</if>
    </where>
  </select>

  <select id="selectByIdLike" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer_info
    where cast(customer_id as char) like #{customerIdString}
  </select>

  <select id="allPrice" resultType="java.math.BigDecimal">
    select
    sum(customer_balance)
    from customer_info
  </select>

</mapper>