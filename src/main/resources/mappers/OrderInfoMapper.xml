<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.pojo.OrderInfo">
    <constructor>
      <idArg column="order_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="customer_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="customer_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="engineer_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="engineer_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="engineer_check_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="engineer_check_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_first_category" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_second_category" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_mi" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_qae" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="other_param_info" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="basic_layer" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="price_together_num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_dec" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_rush" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_deduct_rank" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_deduct_dec" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_rate_dec" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="order_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    order_id, customer_id, customer_name, engineer_id, engineer_name, engineer_check_id, 
    engineer_check_name, order_first_category, order_second_category, order_mi, order_qae, 
    other_param_info, basic_layer, price_together_num, order_dec, order_rush, order_deduct_rank, 
    order_deduct_dec, order_rate_dec, order_state, order_price, order_file, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.OrderInfo">
    insert into order_info (order_id, customer_id, customer_name, 
      engineer_id, engineer_name, engineer_check_id, 
      engineer_check_name, order_first_category, 
      order_second_category, order_mi, order_qae, 
      other_param_info, basic_layer, price_together_num, 
      order_dec, order_rush, order_deduct_rank, 
      order_deduct_dec, order_rate_dec, order_state, 
      order_price, order_file, create_time, 
      update_time)
    values (#{orderId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, 
      #{engineerId,jdbcType=INTEGER}, #{engineerName,jdbcType=VARCHAR}, #{engineerCheckId,jdbcType=INTEGER}, 
      #{engineerCheckName,jdbcType=VARCHAR}, #{orderFirstCategory,jdbcType=VARCHAR}, 
      #{orderSecondCategory,jdbcType=VARCHAR}, #{orderMi,jdbcType=INTEGER}, #{orderQae,jdbcType=INTEGER}, 
      #{otherParamInfo,jdbcType=VARCHAR}, #{basicLayer,jdbcType=INTEGER}, #{priceTogetherNum,jdbcType=INTEGER}, 
      #{orderDec,jdbcType=VARCHAR}, #{orderRush,jdbcType=INTEGER}, #{orderDeductRank,jdbcType=INTEGER}, 
      #{orderDeductDec,jdbcType=VARCHAR}, #{orderRateDec,jdbcType=VARCHAR}, #{orderState,jdbcType=INTEGER}, 
      #{orderPrice,jdbcType=DECIMAL}, #{orderFile,jdbcType=VARCHAR}, now())},
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="engineerId != null">
        engineer_id,
      </if>
      <if test="engineerName != null">
        engineer_name,
      </if>
      <if test="engineerCheckId != null">
        engineer_check_id,
      </if>
      <if test="engineerCheckName != null">
        engineer_check_name,
      </if>
      <if test="orderFirstCategory != null">
        order_first_category,
      </if>
      <if test="orderSecondCategory != null">
        order_second_category,
      </if>
      <if test="orderMi != null">
        order_mi,
      </if>
      <if test="orderQae != null">
        order_qae,
      </if>
      <if test="otherParamInfo != null">
        other_param_info,
      </if>
      <if test="basicLayer != null">
        basic_layer,
      </if>
      <if test="priceTogetherNum != null">
        price_together_num,
      </if>
      <if test="orderDec != null">
        order_dec,
      </if>
      <if test="orderRush != null">
        order_rush,
      </if>
      <if test="orderDeductRank != null">
        order_deduct_rank,
      </if>
      <if test="orderDeductDec != null">
        order_deduct_dec,
      </if>
      <if test="orderRateDec != null">
        order_rate_dec,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderFile != null">
        order_file,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="engineerId != null">
        #{engineerId,jdbcType=INTEGER},
      </if>
      <if test="engineerName != null">
        #{engineerName,jdbcType=VARCHAR},
      </if>
      <if test="engineerCheckId != null">
        #{engineerCheckId,jdbcType=INTEGER},
      </if>
      <if test="engineerCheckName != null">
        #{engineerCheckName,jdbcType=VARCHAR},
      </if>
      <if test="orderFirstCategory != null">
        #{orderFirstCategory,jdbcType=VARCHAR},
      </if>
      <if test="orderSecondCategory != null">
        #{orderSecondCategory,jdbcType=VARCHAR},
      </if>
      <if test="orderMi != null">
        #{orderMi,jdbcType=INTEGER},
      </if>
      <if test="orderQae != null">
        #{orderQae,jdbcType=INTEGER},
      </if>
      <if test="otherParamInfo != null">
        #{otherParamInfo,jdbcType=VARCHAR},
      </if>
      <if test="basicLayer != null">
        #{basicLayer,jdbcType=INTEGER},
      </if>
      <if test="priceTogetherNum != null">
        #{priceTogetherNum,jdbcType=INTEGER},
      </if>
      <if test="orderDec != null">
        #{orderDec,jdbcType=VARCHAR},
      </if>
      <if test="orderRush != null">
        #{orderRush,jdbcType=INTEGER},
      </if>
      <if test="orderDeductRank != null">
        #{orderDeductRank,jdbcType=INTEGER},
      </if>
      <if test="orderDeductDec != null">
        #{orderDeductDec,jdbcType=VARCHAR},
      </if>
      <if test="orderRateDec != null">
        #{orderRateDec,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderFile != null">
        #{orderFile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.OrderInfo">
    update order_info
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="engineerId != null">
        engineer_id = #{engineerId,jdbcType=INTEGER},
      </if>
      <if test="engineerName != null">
        engineer_name = #{engineerName,jdbcType=VARCHAR},
      </if>
      <if test="engineerCheckId != null">
        engineer_check_id = #{engineerCheckId,jdbcType=INTEGER},
      </if>
      <if test="engineerCheckName != null">
        engineer_check_name = #{engineerCheckName,jdbcType=VARCHAR},
      </if>
      <if test="orderFirstCategory != null">
        order_first_category = #{orderFirstCategory,jdbcType=VARCHAR},
      </if>
      <if test="orderSecondCategory != null">
        order_second_category = #{orderSecondCategory,jdbcType=VARCHAR},
      </if>
      <if test="orderMi != null">
        order_mi = #{orderMi,jdbcType=INTEGER},
      </if>
      <if test="orderQae != null">
        order_qae = #{orderQae,jdbcType=INTEGER},
      </if>
      <if test="otherParamInfo != null">
        other_param_info = #{otherParamInfo,jdbcType=VARCHAR},
      </if>
      <if test="basicLayer != null">
        basic_layer = #{basicLayer,jdbcType=INTEGER},
      </if>
      <if test="priceTogetherNum != null">
        price_together_num = #{priceTogetherNum,jdbcType=INTEGER},
      </if>
      <if test="orderDec != null">
        order_dec = #{orderDec,jdbcType=VARCHAR},
      </if>
      <if test="orderRush != null">
        order_rush = #{orderRush,jdbcType=INTEGER},
      </if>
      <if test="orderDeductRank != null">
        order_deduct_rank = #{orderDeductRank,jdbcType=INTEGER},
      </if>
      <if test="orderDeductDec != null">
        order_deduct_dec = #{orderDeductDec,jdbcType=VARCHAR},
      </if>
      <if test="orderRateDec != null">
        order_rate_dec = #{orderRateDec,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderFile != null">
        order_file = #{orderFile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>

        update_time = now(),

    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.OrderInfo">
    update order_info
    set customer_id = #{customerId,jdbcType=INTEGER},
      customer_name = #{customerName,jdbcType=VARCHAR},
      engineer_id = #{engineerId,jdbcType=INTEGER},
      engineer_name = #{engineerName,jdbcType=VARCHAR},
      engineer_check_id = #{engineerCheckId,jdbcType=INTEGER},
      engineer_check_name = #{engineerCheckName,jdbcType=VARCHAR},
      order_first_category = #{orderFirstCategory,jdbcType=VARCHAR},
      order_second_category = #{orderSecondCategory,jdbcType=VARCHAR},
      order_mi = #{orderMi,jdbcType=INTEGER},
      order_qae = #{orderQae,jdbcType=INTEGER},
      other_param_info = #{otherParamInfo,jdbcType=VARCHAR},
      basic_layer = #{basicLayer,jdbcType=INTEGER},
      price_together_num = #{priceTogetherNum,jdbcType=INTEGER},
      order_dec = #{orderDec,jdbcType=VARCHAR},
      order_rush = #{orderRush,jdbcType=INTEGER},
      order_deduct_rank = #{orderDeductRank,jdbcType=INTEGER},
      order_deduct_dec = #{orderDeductDec,jdbcType=VARCHAR},
      order_rate_dec = #{orderRateDec,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=INTEGER},
      order_price = #{orderPrice,jdbcType=DECIMAL},
      order_file = #{orderFile,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

   <select id="customerListOrder" resultMap="BaseResultMap" parameterType="map">
     select
     <include refid="Base_Column_List" />
     from order_info
     <where>
       <if test="orderState != null"> order_state = #{orderState}</if>
       <if test="customerId != null">and customer_id = #{customerId}</if>
     </where>
   </select>

  <select id="engineerCaughtList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_info
    <where>
      <if test="orderFirstCategory != null"> order_first_category = #{orderFirstCategory,jdbcType=VARCHAR}</if>
      <if test="secondCategories != null">
        and order_second_category in
        <foreach item="item" index="index" open="(" separator="," close=")" collection="secondCategories">
          #{item}
        </foreach>
      </if>
      <if test="orderMi != null"> and order_mi = #{orderMi}</if>
      <if test="orderState != null"> and order_state = #{orderState}</if>
    </where>
  </select>

</mapper>